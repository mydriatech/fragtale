# log₂ ((26×2+10)^86) ≃ 512 -> 86 alpha num chars ≃ 512 bits of random
apiVersion: v1
kind: Secret
metadata:
  {{- $name := print (include "fragtale.fullname" .) "-integrity" }}
  name: "{{ $name }}"
type: Opaque
data:
  {{- $existing_secret := (lookup "v1" "Secret" .Release.Namespace $name) }}
  {{- $now_epoch_seconds := now | unixEpoch | toString }}
  {{- $correlation_oid_b64 := .Values.app.correlation.oid | b64enc  }}
  {{- if not $existing_secret }}
  # Generate secrets
  current: {{ randAlphaNum 86 | b64enc  | b64enc}}
  current_oid: {{ .Values.app.integrity.oid | b64enc}}
  current_ts: {{ $now_epoch_seconds | b64enc }}
  previous: {{ randAlphaNum 86 | b64enc | b64enc }}
  previous_oid: {{ .Values.app.integrity.oid  | b64enc}}
  generation: {{ .Values.app.integrity.generation | toString | b64enc }}
  correlation: {{ randAlphaNum 86 | b64enc  | b64enc }}
  correlation_oid: {{ $correlation_oid_b64 }}
  {{ else }}
  {{- $secret_timestamp := $existing_secret.metadata.creationTimestamp | toDate "2006-01-02T15:04:05Z07:00" | unixEpoch }}
  {{- $not_after := now | dateModify "-18.0m" | unixEpoch }}
  {{- $old_generation := index $existing_secret.data "generation" | b64dec | int64 }}
  {{- $new_generation := .Values.app.integrity.generation | int64 }}
  {{- if and (lt $secret_timestamp $not_after) (lt $old_generation $new_generation) }}
  # Regenerate current secret
  current: {{ randAlphaNum 86 | b64enc | b64enc }}
  current_oid: {{ .Values.app.integrity.oid  | b64enc}}
  current_ts: {{ $now_epoch_seconds  | b64enc }}
  previous: {{ index $existing_secret.data "current" }}
  previous_oid: {{ index $existing_secret.data "current_oid" }}
  generation: {{ $new_generation | toString | b64enc }}
  {{ else }}
  # Reuse password
  current: {{ index $existing_secret.data "current" }}
  current_oid: {{ index $existing_secret.data "current_oid" }}
  current_ts: {{ index $existing_secret.data "current_ts" }}
  previous: {{ index $existing_secret.data "previous" }}
  previous_oid: {{ index $existing_secret.data "previous_oid" }}
  generation: {{ index $existing_secret.data "generation" }}
  {{ end }}
  # Check if OID changed, and regen if so
  {{- $previous_correlation_oid := index $existing_secret.data "correlation_oid" }}
  {{- if eq $correlation_oid_b64 $previous_correlation_oid }}
  correlation: {{ index $existing_secret.data "correlation" }}
  {{ else }}
  correlation: {{ randAlphaNum 86 | b64enc  | b64enc }}
  {{ end }}
  correlation_oid: {{ $correlation_oid_b64 }}
  {{ end }}
